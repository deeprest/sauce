// Generated by CoffeeScript 1.12.7
(function() {
  var os, path;

  os = require('os');

  path = require('path');

  module.exports = function() {
    this.platform = os.platform();
    this.dirRoot = path.resolve(process.cwd(), '..', '..');
    this.dirSource = path.resolve(this.dirRoot, 'code');
    this.dirGeneratedSourceOutput = path.resolve(this.dirSource, 'mustached');
    this.dirDownload = path.resolve(this.dirRoot, 'external');
    this.dirExternal = path.resolve(this.dirRoot, 'external', this.platform);
    this.dirBuildRoot = path.resolve(this.dirRoot, 'dev-build');
    this.dirOutput = path.resolve(this.dirBuildRoot, this.platform);
    this.dirObj = path.resolve(this.dirBuildRoot, '.obj');
    this.dirTool = path.resolve(this.dirRoot, 'tool');
    this.dirAsset = path.resolve(this.dirRoot, 'asset');
    this.includeDirectories = ['-I' + path.resolve(this.dirExternal, 'include'), '-I' + path.resolve(this.dirSource), '-I' + path.resolve(this.dirGeneratedSourceOutput), '-I' + path.resolve(this.dirSource, 'angelscript'), '-I' + path.resolve(this.dirSource, 'component'), '-I/usr/local/include', '-I/usr/include'];
    this.linkerDirectories = ['-L' + path.resolve(this.dirExternal), '-L' + path.resolve(this.dirExternal, 'lib'), '-L/usr/local/lib', '-L/usr/lib'];
    this.mustache = {
      sourceGlob: '*.mustache',
      rename: {
        extname: ''
      },
      context: {
        Components: []
      }
    };
    this.project = {
      outputExecutableName: 'default',
      compilerDefines: ['-g', '-x c++', '-std=c++11'],
      external: [],
      linkerArgs: [],
      sourceGlob: '**/*.cpp',
      watchGlob: '{**/*.cpp,**/*.h,**/*.mustache}',
      assetGlob: '**/*@(.png|.ogg|.json|.as|.frag|.vert)'
    };
    this.target = {
      linux: {
        compilerDefines: [],
        linkerArgs: []
      },
      darwin: {
        compilerDefines: [],
        linkerArgs: [],
        frameworks: []
      }
    };
    return this;
  };

}).call(this);
